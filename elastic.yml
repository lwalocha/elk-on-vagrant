- hosts: es-master-nodes,es-data-nodes
  tasks:
    - name: configure system settings, file descriptors and number of threads
      pam_limits:
        domain: elasticsearch
        limit_type: "{{item.limit_type}}"
        limit_item: "{{item.limit_item}}"
        value: "{{item.value}}"
      with_items:
        - { limit_type: '-', limit_item: 'nproc', value: 4096 }
      sudo: yes
    - name: reload settings from all system configuration files
      shell: sysctl --system
      sudo: yes
    - name: create cert dirs
      file:
        path: /etc/elasticsearch/certs
        state: directory
#        owner: elasticsearch
#        group: elasticsearch
#        mode: 0750
      sudo: yes
    - name: copy transport certificates
      copy:
        src: certs/elastic-transport-certificates.p12
        dest: /etc/elasticsearch/certs
#        owner: elasticsearch
#        group: elasticsearch
#        mode: 0600
      sudo: yes
    - name: copy http certificates
      copy:
        src: certs/elastic-http-certificates.p12
        dest: /etc/elasticsearch/certs
#        owner: elasticsearch
#        group: elasticsearch
#        mode: 0600
      sudo: yes

- hosts: es-master-nodes
  roles:
    - role: elastic.elasticsearch
  vars:
    es_heap_size: "768m"
    es_java_install: true
    es_api_port: "{{cluster_http_port}}"
    es_data_dirs:
      - "/opt/elasticsearch/data"
    es_log_dir: "/opt/elasticsearch/logs"
    masterHosts_transport: "{% for host in groups['es-master-nodes'] %} {{hostvars[host]['ansible_'+public_iface]['ipv4']['address'] }}:{{cluster_transport_tcp_port}}{%endfor %}"
    es_config:
      cluster.name: "{{el_instance_name}}"
      network.host: ["{{ hostvars[inventory_hostname]['ansible_' + public_iface]['ipv4']['address'] }}","_local_" ]
      discovery.seed_hosts: "{{ masterHosts_transport.split() }}"
      cluster.initial_master_nodes: "{{ masterHosts_transport.split() }}"
      http.port: "{{cluster_http_port}}"
      transport.tcp.port: "{{cluster_transport_tcp_port}}"
      node.data: true
      node.master: true
      node.ml: false
      node.attr.data: "warm"
      bootstrap.memory_lock: false
      script.painless.regex.enabled: true
      xpack.monitoring.collection.enabled: true
#      xpack.security.enabled: true
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.security.transport.ssl.keystore.path: certs/elastic-transport-certificates.p12
      xpack.security.transport.ssl.truststore.path: certs/elastic-transport-certificates.p12
      xpack.security.http.ssl.enabled: true
      xpack.security.http.ssl.keystore.path: certs/elastic-transport-certificates.p12
      xpack.security.http.ssl.truststore.path: certs/elastic-transport-certificates.p12
      xpack.security.http.ssl.client_authentication: optional
#      xpack.security.authc.realms.pki1.type: pki

- hosts: es-data-nodes
  roles:
    - role: elastic.elasticsearch
  vars:
    es_heap_size: "768m"
    es_java_install: true
    es_api_port: "{{cluster_http_port}}"
    es_data_dirs:
      - "/opt/elasticsearch/data"
    es_log_dir: "/opt/elasticsearch/logs"
    masterHosts_transport: "{% for host in groups['es-master-nodes'] %} {{hostvars[host]['ansible_'+public_iface]['ipv4']['address'] }}:{{cluster_transport_tcp_port}}{%endfor %}"
    es_config:
      cluster.name: "{{el_instance_name}}"
      network.host: ["{{ hostvars[inventory_hostname]['ansible_' + public_iface]['ipv4']['address'] }}","_local_" ]
      discovery.seed_hosts: "{{ masterHosts_transport.split() }}"
      http.port: "{{cluster_http_port}}"
      transport.tcp.port: "{{cluster_transport_tcp_port}}"
      node.data: true
      node.master: false
      node.ml: true
      node.attr.data: "hot"
      bootstrap.memory_lock: false
      script.painless.regex.enabled: true
      xpack.monitoring.collection.enabled: true
#      xpack.security.enabled: true
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.security.transport.ssl.keystore.path: certs/elastic-transport-certificates.p12
      xpack.security.transport.ssl.truststore.path: certs/elastic-transport-certificates.p12
      xpack.security.http.ssl.enabled: true
      xpack.security.http.ssl.keystore.path: certs/elastic-transport-certificates.p12
      xpack.security.http.ssl.truststore.path: certs/elastic-transport-certificates.p12
      xpack.security.http.ssl.client_authentication: optional
#      xpack.security.authc.realms.pki1.type: pki

- hosts: es-master-nodes,es-data-nodes
  tasks:
    - name: change owner cert dirs
      file:
        path: /etc/elasticsearch/certs
        state: directory
        owner: elasticsearch
        group: elasticsearch
        mode: 0750
      sudo: yes
    - name: change owner certs
      file:
        path: /etc/elasticsearch/certs/elastic-transport-certificates.p12
        owner: elasticsearch
        group: elasticsearch
        mode: 0600
      sudo: yes
    - name: change owner certs
      file:
        path: /etc/elasticsearch/certs/elastic-http-certificates.p12
        owner: elasticsearch
        group: elasticsearch
        mode: 0600
      sudo: yes


